name: NPM Deployment

on:
  push:
    branches:
      - master

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      commit_message: ${{ steps.capture_commit_message.outputs.commit_message }} # Define output variable
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
      - name: Install dependencies
        run: npm install
      - name: Setup Git user
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
      - name: Show Git Status
        run: git status
      - name: Capture Commit Message # Capture the commit message
        id: capture_commit_message
        run: echo "::set-output name=commit_message::$(git log -1 --pretty=%B)"
      - name: Release with release-it
        run: |
          commit_message="${{ steps.capture_commit_message.outputs.commit_message }}"
          if [[ "$commit_message" == *"[alpha]"* ]]; then
            npx release-it minor --preRelease=alpha --ci
          else
            npx release-it --ci
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-npm:
    needs: versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch latest changes
        run: |
          git fetch --prune
          git checkout master
          git pull
      - uses: actions/setup-node@v3
        with:
          registry-url: "https://registry.npmjs.org"
      - name: Install Deps
        run: npm install
      - name: Build
        run: npm run build
      - name: Release
        run: |
          echo "Commit message: $commit_message"
          if echo "$commit_message" | grep -q "-alpha"; then
            echo "Publishing alpha release..."
            cd dist/bundle && npm publish --tag alpha --access public --non-interactive
          else
            echo "Publishing regular release..."
            cd dist/bundle && npm publish --access public --non-interactive
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
